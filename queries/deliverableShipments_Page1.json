{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "deliverableShipments",
    "fullyQualifiedName": "AUSPostValidation.deliverableShipments",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Page1",
    "collectionId": "Page1_AUSPostValidation",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tvar ret = []\n\t\t\n\t\tfor (let i = 0; i < GetOrderDetail.data.data.getOrder.shipments.length; i ++) { \n\t\t\t\n\t\t\t//find deliverable shipments\n\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId != \"\"){\n\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId != null){\n\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].status == \"PACKED\") {\n\t\t\t\t\t\tvar items = []\n\t\t\t\t\t\t//find deliverable shipment items\n\t\t\t\t\t\tfor (let j = 0; j < GetOrderDetail.data.data.getOrder.shipments[i].items.length; j ++) {\n\t\t\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId != \"\") {\n\t\t\t\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId != null) {\n\t\t\t\t\t\t\t\t\tlet item = {\n\t\t\t\t\t\t\t\t\t\t\"id\": GetOrderDetail.data.data.getOrder.shipments[i].items[j].id,\n\t\t\t\t\t\t\t\t\t\t\"transportCompanyShipmentId\": GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\titems.push(item)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet shipment = {\n\t\t\t\t\t\t\t\"id\": GetOrderDetail.data.data.getOrder.shipments[i].id,\n\t\t\t\t\t\t\t\"transportCompanyShipmentId\": GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId,\n\t\t\t\t\t\t\t\"items\": items\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret.push(shipment)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n\t\tvar ret = []\n\t\t\n\t\tfor (let i = 0; i < GetOrderDetail.data.data.getOrder.shipments.length; i ++) { \n\t\t\t\n\t\t\t//find deliverable shipments\n\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId != \"\"){\n\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId != null){\n\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].status == \"PACKED\") {\n\t\t\t\t\t\tvar items = []\n\t\t\t\t\t\t//find deliverable shipment items\n\t\t\t\t\t\tfor (let j = 0; j < GetOrderDetail.data.data.getOrder.shipments[i].items.length; j ++) {\n\t\t\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId != \"\") {\n\t\t\t\t\t\t\t\tif (GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId != null) {\n\t\t\t\t\t\t\t\t\tlet item = {\n\t\t\t\t\t\t\t\t\t\t\"id\": GetOrderDetail.data.data.getOrder.shipments[i].items[j].id,\n\t\t\t\t\t\t\t\t\t\t\"transportCompanyShipmentId\": GetOrderDetail.data.data.getOrder.shipments[i].items[j].transportCompanyItemId\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\titems.push(item)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet shipment = {\n\t\t\t\t\t\t\t\"id\": GetOrderDetail.data.data.getOrder.shipments[i].id,\n\t\t\t\t\t\t\t\"transportCompanyShipmentId\": GetOrderDetail.data.data.getOrder.shipments[i].transportCompanyShipmentId,\n\t\t\t\t\t\t\t\"items\": items\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret.push(shipment)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Page1_deliverableShipments",
  "deleted": false,
  "gitSyncId": "6188a576799de8559acc5336_61d67a38a4437918c02219a5"
}